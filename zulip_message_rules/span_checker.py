from html_validator.types import IllegalHtmlException, Node
from typing import Set

VALID_SPAN_CLASSES: Set[str] = {
    "arraycolsep",
    "base",
    "bp",
    "c",
    "c1",
    "cd-arrow-pad",
    "cd-label-left",
    "cd-label-right",
    "cd-vert-arrow",
    "ch",
    "cm",
    "col-align-c",
    "cp",
    "delim-size1",
    "delimsizing",
    "delimsizinginner",
    # see special handling below for emoji-related classes
    "err",
    "fm",
    "frac-line",
    "gd",
    "gh",
    "gi",
    "go",
    "gp",
    "gp-VirtualEnv",
    "gr",
    "gs",
    "gt",
    "gu",
    "hide-tail",
    "k",
    "katex",
    "katex-display",
    "katex-html",
    "katex-mathml",
    "kc",
    "kd",
    "kn",
    "kp",
    "kr",
    "kt",
    "l",
    "l-Scalar",
    "l-Scalar-Plain",
    "large-op",
    "m",
    "m-Attribute",
    "mathnormal",
    "mbin",
    "mclose",
    "mf",
    "mfrac",
    "mh",
    "mi",
    "mop",
    "mopen",
    "mord",
    "mpunct",
    "mrel",
    "mspace",
    "msupsub",
    "mtable",
    "mtight",
    "mult",
    "n",
    "na",
    "nb",
    "nc",
    "nd",
    "ne",
    "nf",
    "ni",
    "nl",
    "nn",
    "no",
    "nt",
    "nulldelimiter",
    "nv",
    "nx",
    "o",
    "op-symbol",
    "ow",
    "p",
    "p-Indicator",
    "pm",
    "pstrut",
    "reset-size3",
    "reset-size6",
    "s",
    "s-Name",
    "s1",
    "s2",
    "sa",
    "sb",
    "sd",
    "se",
    "si",
    "silent",
    "size1",
    "size3",
    "sizing",
    "small-op",
    "sr",
    "ss",
    "strut",
    "svg-align",
    "tex-error",
    "text",
    "timestamp-error",
    "topic-mention",
    "user-group-mention",
    "user-mention",
    "vlist",
    "vlist-r",
    "vlist-s",
    "vlist-t",
    "vlist-t2",
    "vm",
    "w",
    "x",
    "x-arrow",
}


def check_span_classes(node: Node) -> None:
    """
    Note that these checks are in addition to the normal
    checks that we do on all tags as defined by rules.py.

    The customization for <span> tags is mostly due to how
    many classes we have (including some from third parties
    like katex) as well as emoji-related complications.
    """
    if "class" in node.attrib:
        class_string = str(node.attrib["class"])
        classes = class_string.split(" ")

        if class_string.startswith("emoji emoji-"):
            classes = classes[2:]

        for c in classes:
            if c not in VALID_SPAN_CLASSES:
                raise IllegalHtmlException(
                    node=node, message=f"SPAN CLASS {c} is NOT VALID"
                )
