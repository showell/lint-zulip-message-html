ALL_TAGS = {
    "a",
    "annotation",
    "blockquote",
    "br",
    "code",
    "del",
    "div",
    "em",
    "h1",
    "h2",
    "h3",
    "h4",
    "h5",
    "h6",
    "hr",
    "img",
    "li",
    "math",
    "mfrac",
    "mi",
    "mn",
    "mo",
    "mrow",
    "msub",
    "msubsup",
    "msup",
    "mtext",
    "ol",
    "p",
    "pre",
    "semantics",
    "span",
    "strong",
    "table",
    "tbody",
    "td",
    "th",
    "thead",
    "time",
    "tr",
    "ul",
    "video",
}

RESTRICTED_TAGS = dict(
    a={"code", "video", "img"},
    code={"span"},
    ol={"li"},
    pre={"span", "code"},
    span={"span", "math"},
    table={"thead", "tbody"},
    tbody={"tr"},
    thead={"tr"},
    tr={"th", "td"},
    ul={"li"},
)

LEAF_TAGS = {
    "annotation",
    "br",
    "hr",
    "img",
    "mi",
    "mn",
    "mo",
    "mtext",
    "td",
    "th",
    "time",
    "video",
}

TEXT_FRIENDLY_TAGS = {
    "a",
    "annotation",
    "code",
    "del",
    "em",
    "h1",
    "h2",
    "h3",
    "h4",
    "h5",
    "h6",
    "li",
    "mi",
    "mn",
    "mo",
    "mtext",
    "p",
    "span",
    "strong",
    "td",
    "th",
    "time",
}

NO_ATTR_TAGS = {
    "blockquote",
    "br",
    "code",
    "del",
    "em",
    "h1",
    "h2",
    "h3",
    "h4",
    "h5",
    "h6",
    "hr",
    "li",
    "mfrac",
    "mn",
    "mrow",
    "msub",
    "msubsup",
    "msup",
    "mtext",
    "p",
    "pre",
    "semantics",
    "strong",
    "table",
    "tbody",
    "td",
    "th",
    "thead",
    "tr",
    "ul",
}


ATTR_TAGS = dict(
    a={"class", "data-id", "data-stream-id", "href", "title"},
    annotation={"encoding"},
    div={"aria-hidden", "class", "data-code-language"},
    img={"alt", "class", "data-original-dimensions", "src", "title"},
    math={"display", "xmlns"},
    mi={"mathvariant"},
    mo={"lspace", "mathvariant", "rspace", "separator", "stretchy"},
    ol={"start"},
    span={
        "aria-hidden",
        "aria-label",
        "class",
        "data-user-id",
        "role",
        "style",
        "title",
    },
    time={"datetime"},
    video={"data-video-original-url", "preload", "src"},
)

# It's kind of annoying that I have these two data structures, but I
# like to call out the complicated cases.
assert (NO_ATTR_TAGS | set(ATTR_TAGS.keys())) == ALL_TAGS

# TODO: Find a way to validate span attributes. Unfortunately, there are a
#       zillion different span classes in Zulip messages due to things
#       like katex and emoji handling.
CLASS_VALUES = dict(
    a={"message-link", "stream", "stream-topic"},
    div={
        "codehilite",
        "inline-preview-twitter",
        "message_inline_image",
        "message_inline_image message_inline_video",
        "spoiler-block",
        "spoiler-content",
        "spoiler-header",
        "twitter-image",
        "twitter-tweet",
        "youtube-video message_inline_image",
    },
    img={"emoji", "twitter-avatar"},
)
